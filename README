README FILE

The code is split into 3 parts: 

** The examples package ** 
This package contains a few proof examples which can be run by calling the classes' main methods.


** The forms package **
The forms package forms the structure of the formulae:

	                                    Form
	      ________________________________|______________________________________
         |                    |                    |                             |
	   Atomic               Unary               Binary                      Quantifier
   ______|______              |            ________|_________             _______|_______       
  |      |      |             |           |    |   |         |           |               |
True  False  Predicate       Not         And  Or  Implies  Biimplies    Forall         Exists
		
Note that class Form contains a number of static methods to aid with syntactic sugaring


** The rules package ** 

Rules have a flatter hierarchy and all inherit from class Rule:

>> Simple rules with not checking:
Hyp, SubHyp, Lemma, Copy

>> More complex rules:
AndE1, AndE2, AndI, BiimpliesE1, BiimpliesE2, BiimpliesI, ExistsE, ExistsI, ForallE, ForallI, NotE, NotI, OrE, OrI1, OrI2

>> Finally two rules to handle variable substitution:
SubstAdd, SubstRem

The rules package also contains the class Proof which basically brings everything together. This class also contains a number of static methods for syntactic sugaring